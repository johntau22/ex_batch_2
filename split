#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int count_spaces(char*);
int split(char*, char**);

int main()
{
	char* str = "   Lorem  ipsum dolor   sit amet, consectetur adipiscing elit,    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua  ";

	const int spaces = count_spaces(str);

	char** words = malloc(spaces * sizeof(char*));	// number of words should be approximately equal to number of whitespace sequences

	int c = split(str, words);

	for (int i = 0; i < c; ++i)
		puts(words[i]);

	for (int i = 0; i < c; ++i)
		free(words[i]);

	free(words);

	return 0;
}

int count_spaces(char* str)
{
	int i = 0;
	int count = 0;
	while (str[i] != '\0')
	{
		if (isspace(str[i]))
		{
			while (isspace(str[i]) && str[i] != '\0')
				++i;
			++count;
		}

		while (!isspace(str[i]) && str[i] != '\0')
			++i;
	}

	return count;
}

int split(char* str, char** out)
{
	int word_count = 0;
	int i = 0;
	while (str[i])
	{
		while ( (isspace(str[i]) || !isalnum(str[i])) && str[i] != '\0')
			++i;	// skip whitespaces

		int j = i;
		while (isalnum(str[j]) && str[j] != '\0')
			++j;

		out[word_count] = malloc((j - i + 1) * sizeof(char));
		memcpy(out[word_count], &str[i], j - i);
		out[word_count][j - i] = '\0';
		i = j;
		
		if (str[i+1] != '\0')
			++word_count;

		++i;
	}

	return word_count;
}
